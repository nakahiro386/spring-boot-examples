<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.github.nakahiro386.spring.boot.example.domain.sqlmap.PeopleMapper">
  <resultMap id="BaseResultMap" type="io.github.nakahiro386.spring.boot.example.domain.entity.People">
    <id column="ID" jdbcType="BIGINT" property="id" />
    <result column="FIRST_NAME" jdbcType="VARCHAR" property="firstName" />
    <result column="LAST_NAME" jdbcType="VARCHAR" property="lastName" />
    <result column="VERSION" jdbcType="INTEGER" property="version" />
    <result column="CREATED_BY" jdbcType="VARCHAR" property="createdBy" />
    <result column="CREATED_DATE" jdbcType="TIMESTAMP" property="createdDate" />
    <result column="LAST_MODIFIED_BY" jdbcType="VARCHAR" property="lastModifiedBy" />
    <result column="LAST_MODIFIED_DATE" jdbcType="TIMESTAMP" property="lastModifiedDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, FIRST_NAME, LAST_NAME, VERSION, CREATED_BY, CREATED_DATE, LAST_MODIFIED_BY, LAST_MODIFIED_DATE
  </sql>
  <select id="selectByExample" parameterType="io.github.nakahiro386.spring.boot.example.domain.entity.PeopleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from PEOPLE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from PEOPLE
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from PEOPLE
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="io.github.nakahiro386.spring.boot.example.domain.entity.PeopleExample">
    delete from PEOPLE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="ID" keyProperty="id" parameterType="io.github.nakahiro386.spring.boot.example.domain.entity.People" useGeneratedKeys="true">
    insert into PEOPLE (FIRST_NAME, LAST_NAME, VERSION, 
      CREATED_BY, CREATED_DATE, LAST_MODIFIED_BY, 
      LAST_MODIFIED_DATE)
    values (#{firstName,jdbcType=VARCHAR}, #{lastName,jdbcType=VARCHAR}, #{version,jdbcType=INTEGER}, 
      #{createdBy,jdbcType=VARCHAR}, #{createdDate,jdbcType=TIMESTAMP}, #{lastModifiedBy,jdbcType=VARCHAR}, 
      #{lastModifiedDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="ID" keyProperty="id" parameterType="io.github.nakahiro386.spring.boot.example.domain.entity.People" useGeneratedKeys="true">
    insert into PEOPLE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="firstName != null">
        FIRST_NAME,
      </if>
      <if test="lastName != null">
        LAST_NAME,
      </if>
      VERSION,
      <if test="createdBy != null">
        CREATED_BY,
      </if>
      <if test="createdDate != null">
        CREATED_DATE,
      </if>
      <if test="lastModifiedBy != null">
        LAST_MODIFIED_BY,
      </if>
      <if test="lastModifiedDate != null">
        LAST_MODIFIED_DATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="firstName != null">
        #{firstName,jdbcType=VARCHAR},
      </if>
      <if test="lastName != null">
        #{lastName,jdbcType=VARCHAR},
      </if>
      #{version,jdbcType=INTEGER},
      <if test="createdBy != null">
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdDate != null">
        #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifiedBy != null">
        #{lastModifiedBy,jdbcType=VARCHAR},
      </if>
      <if test="lastModifiedDate != null">
        #{lastModifiedDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="io.github.nakahiro386.spring.boot.example.domain.entity.PeopleExample" resultType="java.lang.Long">
    select count(*) from PEOPLE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update PEOPLE
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.firstName != null">
        FIRST_NAME = #{record.firstName,jdbcType=VARCHAR},
      </if>
      <if test="record.lastName != null">
        LAST_NAME = #{record.lastName,jdbcType=VARCHAR},
      </if>
      <if test="record.version != null">
        VERSION = #{record.version,jdbcType=INTEGER},
      </if>
      <if test="record.createdBy != null">
        CREATED_BY = #{record.createdBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createdDate != null">
        CREATED_DATE = #{record.createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastModifiedBy != null">
        LAST_MODIFIED_BY = #{record.lastModifiedBy,jdbcType=VARCHAR},
      </if>
      <if test="record.lastModifiedDate != null">
        LAST_MODIFIED_DATE = #{record.lastModifiedDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update PEOPLE
    set ID = #{record.id,jdbcType=BIGINT},
      FIRST_NAME = #{record.firstName,jdbcType=VARCHAR},
      LAST_NAME = #{record.lastName,jdbcType=VARCHAR},
      VERSION = #{record.version,jdbcType=INTEGER},
      CREATED_BY = #{record.createdBy,jdbcType=VARCHAR},
      CREATED_DATE = #{record.createdDate,jdbcType=TIMESTAMP},
      LAST_MODIFIED_BY = #{record.lastModifiedBy,jdbcType=VARCHAR},
      LAST_MODIFIED_DATE = #{record.lastModifiedDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="io.github.nakahiro386.spring.boot.example.domain.entity.People">
    update PEOPLE
    <set>
      <if test="firstName != null">
        FIRST_NAME = #{firstName,jdbcType=VARCHAR},
      </if>
      <if test="lastName != null">
        LAST_NAME = #{lastName,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        VERSION = #{version,jdbcType=INTEGER},
      </if>
      <if test="createdBy != null">
        CREATED_BY = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdDate != null">
        CREATED_DATE = #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifiedBy != null">
        LAST_MODIFIED_BY = #{lastModifiedBy,jdbcType=VARCHAR},
      </if>
      <if test="lastModifiedDate != null">
        LAST_MODIFIED_DATE = #{lastModifiedDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.github.nakahiro386.spring.boot.example.domain.entity.People">
    update PEOPLE
    set FIRST_NAME = #{firstName,jdbcType=VARCHAR},
      LAST_NAME = #{lastName,jdbcType=VARCHAR},
      VERSION = #{version,jdbcType=INTEGER},
      CREATED_BY = #{createdBy,jdbcType=VARCHAR},
      CREATED_DATE = #{createdDate,jdbcType=TIMESTAMP},
      LAST_MODIFIED_BY = #{lastModifiedBy,jdbcType=VARCHAR},
      LAST_MODIFIED_DATE = #{lastModifiedDate,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="io.github.nakahiro386.spring.boot.example.domain.entity.PeopleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from PEOPLE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>